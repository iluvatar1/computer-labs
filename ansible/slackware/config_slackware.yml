# Run as ansible-playbook -e 'all=localhost' ansible/slackware/config_slackware.yml
---
- name: Basic slackware configuration after installation
  hosts: "{{ all | default('clients') }}"
  gather_facts: false
  vars:
    network_available: true
  tasks:
  - name: Default init to runlevel 4
    replace:
      dest: /etc/inittab
      regexp: '^id:3:initdefault'
      replace: 'id:4:initdefault'
      backup: yes

  - name: Activating nfs and ssh services
    file:
      path: '/etc/rc.d/rc.{{item}}'
      mode: +x
    loop:
      - nfsd
      - sshd

  - name: Configuring time zone to bogota
    file:
      src: /usr/share/zoneinfo/America/Bogota
      dest: /etc/localtime
      force: yes
      state: link

  - name: Adding more ntp servers
    blockinfile:
      dest: /etc/ntp.conf
      backup: yes
      block: |
        server   0.pool.ntp.org   iburst
        server   0.co.pool.ntp.org   iburst
    register:
      ntpservers

  - name: Activating ntp service
    file:
      path: /etc/rc.d/rc.ntpd
      mode: +x
    register: ntpservice
 
  - name: Restarting ntpd if needed
    shell:
      cmd: /etc/rc.d/rc.ntpd restart
    when:
      ntpservers.changed or ntpservice.changed

  - name: Touching .bashrc file in root
    file:
      path: /root/.bashrc
      state: touch
      modification_time: preserve
      access_time: preserve

  - name: Wake on lan
    debug:
      msg: "Ignoring Wake on lan settings for now"

  - name: Adding dhcp on both eth0 and eth1
    replace:
      dest: /etc/rc.d/rc.inet1.conf
      regexp: '^USE_DHCP\[{{item}}\]="(no)?"'
      replace: 'USE_DHCP[{{item}}]="yes"'
    loop:
      - 0
      - 1

  - name: Activating networkmanager service
    file:
      path: /etc/rc.d/rc.networkmanager
      mode: +x
    register: nmservice

  - name: restart networkmanager service if needed
    shell:
      cmd: /etc/rc.d/rc.networkmanager
    when:
      nmservice.changed

  - name: Configuring lilo
    block: 
      - name: Check if lilo.conf exists
        stat:
          path: /etc/lilo.conf
        register: lilo

      - name: Decreasing lilo time
        replace:
          dest: /etc/lilo.conf
          regexp: '^timeout.*'
          replace: 'timeout = 50'
          backup: yes
        when:
          lilo.stat.exists
        register: lilofile

      - name: Running lilo if updated
        shell:
          cmd: '/sbin/lilo &>/dev/null'
        when:
          lilofile.changed

  - name: Configuring dhcpcd client to use clientid instead of duid 
    replace:
      dest: /etc/dhcpcd.conf
      regexp: '{{item.key}}'
      replace: '{{item.value}}'
      backup: yes
    loop:
      - {key: "^#clientid", value: "clientid"}
      - {key: "^duid", value: "#duid"}

  - name: Creaating config for virtual monitor
    copy:
      dest: /etc/X11/xorg.conf.d/11-monitor.conf
      content: |
         Section "Monitor"
         Identifier "Virtual1"
         Option "PreferredMode" "1680x1050"
         EndSection

  - name: Added loading of /etc/profile to bashrc skeleton
    lineinfile:
      dest: /etc/skel/.bashrc
      regexp: '^{{item}}'
      line: '{{item}}'
      create: yes
    loop:
      - 'source /etc/profile'

  - name: Fixing xinitrc on etc skel
    copy:
      src: /etc/xdg/xfce4/xinitrc
      dest: /etc/skel/.xinitrc
      mode: +x

  - name: Copying xsession to etc skel
    copy:
      src: /etc/xdg/xfce4/xinitrc
      dest: /etc/skel/.xsession
      mode: +x

  - name: Creating Xauthority
    file:
      path: /etc/skel/.Xauthority
      state: touch
      access_time: preserve
      modification_time: preserve

  - name: Configuring latam keyboard
    blockinfile:
      dest: /etc/X11/xorg.conf.d/90-keyboard-layout.conf
      create: yes
      block: |
        Section "InputClass"
          Identifier "keyboard defaults"
          MatchIsKeyboard "on"
          #MatchDevicePath "/dev/input/event*"
          #Driver "evdev"
          Option "XkbLayout" "latam,us"
          #Option "XkbVariant" ""
          Option "XkbOptions" "terminate:ctrl_alt_bksp"
        EndSection

  - name: Configure fonts (TO IMPROVE)
    shell:
      cmd: '{{item.command}}'
      creates: '{{item.file}}'
    loop:
      - {command: 'mkfontscale /usr/share/fonts/100dpi', file: '/usr/share/fonts/100dpi/fonts.scale'}
      - {command: 'mkfontdir /usr/share/fonts/100dpi', file: '/usr/share/fonts/100dpi/fonts.dir'}
      # The commands 'xset +fp /usr/share/fonts/100dpi; xset fp rehash' require display

  # To automate the dialog in curses, tmux is used
  # REF: https://superuser.com/questions/585398/sending-simulated-keystrokes-in-bas
  - name: Check if link to xfce exists
    stat:
      path: /etc/X11/xinit/xinitrc
    register: xinitrclink

  - name: Configuring xwmconfig 
    shell:
      cmd: 'tmux new-session -d -t Test; tmux send-keys -t Test: "xwmconfig" "Enter" ; tmux send-keys -t Test: "Down" "Enter"; tmux kill-session -t Test'
    when:
      xinitrclink.stat.lnk_source != '/etc/X11/xinit/xinitrc.xfce'


  - name: Setting generic hostname to later use the one from dhcpc
    copy:
      dest: /etc/HOSTNAME
      content: | 
        localhost

  # - name: making xdm first option in rc.4 
  #   copy:
  #     dest: /etc/rc.d/rc.4.local
  #     content: | 
  #       if [ -x /usr/bin/xdm ]; then exec /usr/bin/xdm -nodaemon; elif [ -x /usr/X11R6/bin/xdm ]; then exec /usr/X11R6/bin/xdm -nodaemon; fi
  #     mode: +x

  - name: Checking if system has efi boot files
    stat:
      path: /boot/efi/EFI/Slackware
    register: efi

  - name: Fixing efi boot on some hewlet packard bios -> create needed dir
    copy:
      src: /boot/efi/EFI/Slackware/
      dest: /boot/efi/EFI/boot/
      remote_src: yes
      directory_mode: yes
    when: efi.stat.exists

  - name: Checking if new efi directory was created
    stat:
      path: /boot/efi/EFI/boot/
    register: efiboot

  - name: Fixing efi boot on some hewlet packard bios -> changing names
    copy:
      src: /boot/efi/EFI/boot/elilo.efi
      dest: /boot/efi/EFI/boot/bootx64.efi
      remote_src: yes
    when:
      efiboot.stat.exists
