---
- name: Default init to runlevel 4
  replace:
    dest: /etc/inittab
    regexp: '^id:3:initdefault'
    replace: '^id:4:initdefault'
    backup: yes

- name: Activating nfs and ssh services
  file:
    path: '/etc/rc.d/rc.{{item}}'
    mode: +x
  loop:
    - nfsd
    - sshd

- name: Configuring time zone to bogota
  copy:
    src: /usr/share/zoneinfo/America/Bogota
    dest: /etc/localtime

- name: Adding more ntp servers
  blockinfile:
    dest: /etc/ntp.conf
    backup: yes
    block: |
      server   0.pool.ntp.org   iburst
      server   0.co.pool.ntp.org   iburst
  register:
    ntpservers

- name: Activating ntp service
  file:
    path: /etc/rc.d/rc.ntpd
    mode: +x
  register: ntpservice

- name: Restarting ntpd if needed
  shell:
    cmd: /etc/rc.d/rc.ntpd restart
  when:
    ntpservers.changed or ntpservice.changed

# Will ignore wake on lan for now

- name: Configure slackpkg mirrors
  lineinfile:
    dest: /etc/slackpkg/mirrors
    regexp: '^{{item}}'
    line: '{{item}}'
  loop:
    - http://mirrors.slackware.com/slackware/slackware64-current/
  register: mirrors

- name: Configuring slackpkg blacklist
  lineinfile:
    dest: /etc/slackpkg/blacklist
    regexp: '^{{item}}'
    line: '{{item}}'
    backup: yes
  loop:
    - 'kernel-generic\.\*'
    - 'kernel-huge\.\*'
    - 'kernel-modules\.\*'
    - 'kernel-source\.\*'
    - '[0-9]\+_SBo'
    - '[0-9]\+alien'
  register: blacklist

- name: Updating slackpkg if needed
  shell:
    cmd: '{{item}}'
  loop:
    - 'slackpkg -batch=on -default_answer=y update gpg'
    - 'slackpkg -batch=on -default_answer=y update'
  when:
    mirrors.changed or blacklist.changed

- name: Adding dhcp on both eth0 and eth1
  replace:
    dest: /etc/rc.d/rc.inet1.conf
    regexp: '^USE_DHCP\[{{item}}\]=.*'
    replace: '^USE_DHCP\[{{item}}\]="yes"'
  loop:
    - 0
    - 1

- name: Activating networkmanager service
  file:
    path: /etc/rc.d/rc.networkmanager
    mode: +x
  register: nmservice

- name: restart networkmanager service if needed
  shell:
    cmd: /etc/rc.d/rc.networkmanager
  when:
    nmservice.changed

- name: Decreasing lilo time
  replace:
    dest: /etc/lilo.conf
    regexp: '^timeout.*'
    replace: 'timeout = 50'

- name: Checking if slpkg is installed
  stat:
    path: /usr/bin/slpkg
  register: slpkg
  
- name: Installing slpkg if needed
  shell:
    cmd: 'source /root/.bashrc; pip3 install urllib3 slpkg'
  when:
    slpkg.stat.exists == False
  register: slpkginstalled

- name: Configuring slpkg options
  replace:
    dest: /etc/slpkg/slpkg.conf
    regexp: '^{{item.key}}'
    replace: '{{item.value}}'
    backup: yes
  loop:
    - { key: "RELEASE=stable", value: "RELEASE=current" }
    - { key: "DEFAULT_ANSWER=no", value: "DEFAULT_ANSWER=yes" }
    - { key: "DOWNDER_OPTIONS=.*", value: "DOWNDER_OPTIONS=-c -N --no-check-certificate" }
    - { key: "NOT_DOWNGRADE=off", value: "NOT_DOWNGRADE=on" }
  register: slpkgopts

- name: Configuring slpkg repos
  replace:
    dest: /etc/slpkg/slpkg.conf
    regexp: '^#{{item}}'
    replace: '{{item}}'
    backup: yes
  loop:
    - slack
    - sbo
    - alien
  register: slpkgrepos

- name: Configuring slpkg blacklist
  blockinfile:
    dest: /etc/slpkg/blacklist
    backup: yes
    block: |
      kernel-firmware
      kernel-generic
      kernel-generic-smp
      kernel-headers
      kernel-huge
      kernel-huge-smp
      kernel-modules
      kernel-modules-smp
      kernel-source
      # mozilla-firefox
  register: slpkgblacklist

- name: Copy patched file_size using urllib3
  copy:
    src: '{{item}}'
    dest: '/{{item}}'
    backup: yes
  loop:
    - 'usr/lib64/python3.9/site-packages/slpkg/file_size.py'
  register: urllib3

- name: Updating slpkg if needed
  shell:
    cmd: 'slpkg update'
  when :
    slpkginstalled.changed or slpkgopts.changed or slpkgrepos.changed or slpkgblcklist.changed or urllib3.changed


- name: Checking if sbopkg is installed
  stat:
    path: /usr/sbin/sbopkg
  register: sbopkg

- name: Installing sbopkg if not installed
  shell:
    cmd: 'wget https://sbopkg.org/test/sbopkg-0.38.2-noarch-1_wsr.tgz; upgradepkg --install-new  sbopkg-0.38.2-noarch-1_wsr.tgz'
  when:
    sbopkg.stat.exists == False
  register: sbopkginstalled

- name: Configuring sbopkg for slackware current
  replace:
    dest: /etc/sbopkg/sbopkg.conf
    regexp: '{{item.key}}'
    replace: '{{item.value}}'
  loop:
    - {key: "-15.0", value: "-current"}
    - {key: "-SBo", value: "-SBo-git"}
  register: sbopkgcurrent

- name: Creating needed directories
  file:
    path: '{{item}}'
    state: directory
  loop:
    - /var/lib/sbopkg/SBo/14.2
    - /var/lib/sbopkg/SBo/15.0
    - /var/log/sbopkg
    - /var/lib/sbopkg/queues
    - /var/cache/sbopkg
    - /tmp/SBo
  register: sbopkgdirs  

- name: Updating sbopkg if needed
  shell:
    cmd: sbopkg -r
  when:
    sbopkg.stat.exists or sbopkginstalled.changed or sbopkgcurrent.changed or sbopkgdirs.changed

- name: Configuring dhcpcd client to use clientid instead of duid
  replace:
    dest: /etc/dhcpcd.conf
    regexp: '{{item.key}}'
    replace: '{{item.value}}'
    backup: yes
  loop:
    - {key: "^#clientid", value: "clientid"}
    - {key: "^duid", value: "#duid"}

- name: Creaating config for virtual monitor
  copy:
    dest: /etc/X11/xorg.conf.d/11-monitor.conf
    content: |
       Section "Monitor"
       Identifier "Virtual1"
       Option "PreferredMode" "1680x1050"
       EndSection

- name: Added loading of /etc/profile to bashrc skeleton
  lineinfile:
    dest: etc/skel/.bashrc
    regexp: '^{{item}}'
    line: '{{item}}'
    create: yes
  loop:
    - 'source /etc/profile'

- name: Fixing xinitrc on etc skel
  copy:
    src: /etc/xdg/xfce4/xinitrc
    dest: /etc/skel/.xinitrc
    mode: +x

- name: Copying xsession to etc skel
  copy:
    src: /etc/xdg/xfce4/xinitrc
    dest: /etc/skel/.xsession
    mode: +x

- name: Creating Xauthority
  file:
    path: /etc/skel/.Xauthority
    state: touch
    access_time: preserve
    modification_time: preserve

- name: Configuring latam keyboard
  blockinfile:
    dest: /etc/X11/xorg.conf.d/90-keyboard-layout.conf
    block: |
      Section "InputClass"
        Identifier "keyboard defaults"
        MatchIsKeyboard "on"
        #MatchDevicePath "/dev/input/event*"
        #Driver "evdev"
        Option "XkbLayout" "latam,us"
        #Option "XkbVariant" ""
        Option "XkbOptions" "terminate:ctrl_alt_bksp"
      EndSection

- name: Configure fonts (not idempotent)
  shell:
    cmd: '{{item}}'
  loop:
    - 'mkfontscale /usr/share/fonts/100dpi'
    - 'mkfontdir /usr/share/fonts/100dpi'
    - 'xset +fp /usr/share/fonts/100dpi'
    - 'xset fp rehash'

# To automate the dialog in curses, tmux is used
# REF: https://superuser.com/questions/585398/sending-simulated-keystrokes-in-bas
- name: Configuring xwmconfig (Not idempotent) 
  shell:
    cmd: 'tmux new-session -d -t Test; tmux send-keys -t Test: "xwmconfig" "Enter" ; tmux send-keys -t Test: "Down" "Enter"; tmux kill-session -t Test'


- name: Setting generic hostname to later use the one from dhcpc
  copy:
    dest: /etc/HOSTNAME
    content: | 
      localhost

- name: making xdm first option in rc.4 
  copy:
    dest: /etc/rc.d/rc.4.local
    content: | 
      if [ -x /usr/bin/xdm ]; then exec /usr/bin/xdm -nodaemon; elif [ -x /usr/X11R6/bin/xdm ]; then exec /usr/X11R6/bin/xdm -nodaemon; fi
    mode: +x

- name: Checking if system has efi boot files
  stat:
    path: /boot/efi
  register: efi

- name: Fixing efi boot on some hewlet packard bios -> create needed dir
  copy:
    src: /boot/efi/EFI/Slackware
    dest: /boot/efi/EFI/boot
  when: efi.stat.exists

- name: Fixing efi boot on some hewlet packard bios -> changing names
  copy:
    src: /boot/efi/EFI/boot/elilo.efi
    dest: /boot/efi/EFI/boot/bootx64.efi
  when: efi.stat.exists

  

