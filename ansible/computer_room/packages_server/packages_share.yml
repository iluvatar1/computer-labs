---
# Check real monitoring if nfs file: http://swick.2flub.org/Monitoring_stale_NFS_and_CIFS_shares_with_monit.html
- name: Configuring package server (exports spack packages and other stuff)
  hosts: "{{ variable_host | default('package_server') }}"
  tags: package_server
  gather_facts: false
  vars_files:
    - vars/main.yml
  tasks:
  
  - name: Creating local link for package dir
    file:
      src: /mnt/scratch
      dest: /packages
      state: link

  - name: Make sure related services are enabled
    file:
      dest: '/etc/rc.d/rc.{{item}}'
      mode: +x
    loop:
      - inet2
      - rpc
      - nfsd
    register: service

  - name: Adding export of local /packages
    lineinfile:
      dest: /etc/exports
      regexp: '^{{item}}'
      line: '{{item}}'
    loop:
      - "/packages {{BASE_SERVERIP}}.0/24(rw,sync,no_root_squash,no_subtree_check)"
    register: exports

  - name: Adding line to hosts.allow
    lineinfile:
      dest: /etc/hosts.allow
      regexp: '^{{item}}'
      line: '{{item}}'
    loop:
      - 'portmap : {{BASE_SERVERIP}}.0/255.255.255.0 '
      - 'lockd : {{BASE_SERVERIP}}.0/255.255.255.0 '
      - 'mountd : {{BASE_SERVERIP}}.0/255.255.255.0 '
      - 'rquotd : {{BASE_SERVERIP}}.0/255.255.255.0 '
      - 'statd : {{BASE_SERVERIP}}.0/255.255.255.0 '
    register: hosts


  - name: Restart nfsd and inet2 and rpc if needed
    shell:
      cmd: '/etc/rc.d/rc.{{item}} start'
    loop:
      - rpc
      - inet2
      - nfsd
    when:
      service.changed or exports.changed or hosts.changed

  - name: Add monit file to monitor the nfs package server
    blockinfile:
      path: /etc/monit.d/package_server
      create: yes
      block: |
        # Monit NFS Server Monitoring
        check process NFS_PACKAGES with pidfile /var/run/rpc.statd.pid
            start program = "/etc/rc.d/rc.nfsd start"
            stop program  = "/etc/rc.d/rc.nfsd stop"
    register: monitfile

  - name: Restart monit service if needed
    shell:
      cmd: '/etc/rc.d/rc.monit restart'
    when:
      monitfile.changed

  - name: Check if elilo.conf exists on boot
    tags: lilo, client
    ansible.builtin.stat:
      path: "/boot/efi/EFI/boot/elilo.conf"
    register: eliloboot

  - name: Setting elilo delay to 5 seconds
    tags: lilo, client
    replace:
      dest: "/boot/efi/EFI/boot/elilo.conf"
      regexp: '^delay.*'
      replace: 'delay=50'
      # backup: yes
    when:
      eliloboot.stat.exists

  - name: Check if elilo.conf exists on Slackware
    tags: lilo, client
    ansible.builtin.stat:
      path: "/boot/efi/EFI/Slackware/elilo.conf"
    register: eliloslack

  - name: Setting elilo delay to 5 seconds
    tags: lilo, client
    replace:
      dest: "/boot/efi/EFI/Slackware/elilo.conf"
      regexp: '^delay.*'
      replace: 'delay=50'
      # backup: yes
    when:
      eliloslack.stat.exists


- name: Mounting /packages on all nodes and setting up spack source
  # Check if better done with autofs: https://www.linuxtechi.com/automount-nfs-share-in-linux-using-autofs/, https://www.redhat.com/sysadmin/mount-nfs-filesystems-autofs
  hosts: "{{ variable_host_client | default('package_clients') }}"
  gather_facts: false
  tags: package_clients
  vars_files:
    - vars/main.yml
  tasks:

  - name: Checking if packages subdir exists
    stat:
      path: /packages
    register: packages
    timeout: 5

  - name: Creating packages subdir if needed
    file:
      path: /packages
      state: directory
    when:
      packages.stat.exists == False or packages.stat.isdir == False

  - name: Creating mounting info in /etc/fstab
    ansible.posix.mount:
      path: /packages
      src: "{{ groups.package_server | first }}:/packages"
      fstype: nfs
      opts: rw,soft
      state: "{{item}}"
    loop:
      - present
      - mounted
    register: fstabmount

  - name: Adding monit monitoring of package mount
    blockinfile:
      path: /etc/monit.d/package_client
      create: yes
      block: |
        check program packages with path "/bin/bash -c 'touch /packages/.mount_test'"
          start program = "/usr/bin/timeout 10s /sbin/mount  -t nfs /packages"
          stop program  = "/usr/bin/timeout 10s /sbin/umount -t nfs /packages"
          if status != 0 then restart
    register: pkg_monit

  - name: Restart monit service if needed
    shell:
      cmd: '/etc/rc.d/rc.monit restart'
    when:
      pkg_monit.changed

  - name: Copying script to load spack everytime
    ansible.builtin.copy:
      src: etc/profile.d/spack_setup.sh
      dest: /etc/profile.d/spack_setup.sh
      backup: no
      mode: a+x
