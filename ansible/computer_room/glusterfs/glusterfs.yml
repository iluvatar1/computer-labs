---
# REF: http://rnowling.github.io/devops/2015/04/21/ansible-gluster.html
- name: Configuring common services and checking on all nodes
  hosts: "{{ variable_client | default('clients','gluster_nodes') }}"
  gather_facts: false
  vars_files:
    - vars/main.yml
  tasks:
  - name: Make sure glusterfs service is activated
    file:
      path: /etc/rc.d/rc.glusterd
      mode: +x
    register: glusternodeservice

  - name: Link service script to sysvinit system
    file:
      src: /etc/rc.d/rc.glusterd
      dest: /etc/init.d/glusterd
      state: link
    register: sysvservice

  - name : Check service glusterd is running
    sysvinit:
      name: glusterd
      state: started
      #enabled: true # Not idempotent with symlink
    register: glusterdserv

  - name: Add monit config to monitor glusterd process
    blockinfile:
      path: /etc/monit.d/glusterfs
      create: yes
      block: |
        check process glusterd with pidfile /run/glusterd.pid
          start program = "/etc/rc.d/rc.glusterd start"
          stop program  = "/etc/rc.d/rc.glusterd stop"
    register: monitfile

  - name: Restart monit if needed
    shell:
      cmd: /etc/rc.d/rc.monit restart
    when: monitfile.changed


####### Setting up servers
- name: Configuring local and shared storage on glusterservers
  hosts: "{{ variable_glusternodes | default('gluster_nodes') }}"
  gather_facts: false
  vars_files:
    - vars/main.yml
  tasks:
  
  # - name: Fixing gpt issues in case it is needed
  #   shell:
  #     cmd: /sbin/sgdisk -e /dev/sda

  - name: Creating a new partition, sda7, with remaining space
    shell:
      cmd: "printf 'n\n\n\n\nw\nq\n' | fdisk /dev/sda; /usr/sbin/partprobe /dev/sda;"
      creates: /sys/block/sda/sda7
    register: partnew

  - name: Formatting as ext4
    shell:
      cmd: 'mkfs.ext4 /dev/sda7'
    when:
      partnew.changed

  - name: Creating mounting info in /etc/fstab (mount to /mnt/tmp)
    ansible.posix.mount:
      path: /mnt/tmp
      src: /dev/sda7
      fstype: ext4
      state: mounted # state: present will add to fstab

  - name: Creating brick subdir
    file:
      path: /mnt/tmp/brick
      state: directory

  - name: Create gluster volume
    gluster.gluster.gluster_volume: 
      name: "{{ GLUSTER_VOLUME_NAME }}"
      bricks: "{{ GLUSTER_BRICK_DIR }}"
      cluster: "{{groups.gluster_nodes | join(',')}}"
      # replicas: "{{gluster_replicas}}" # PRODUCES ERRORS
      state: present # stopped absent started present
      force: true
    run_once: true

  - name: start gluster volume
    gluster.gluster.gluster_volume:
      name: "{{ GLUSTER_VOLUME_NAME }}"
      state: started # stopped absent started present

  - name: Add monit config to monitor glusterfsd process
    blockinfile:
      path: /etc/monit.d/glusterfsserver
      create: yes
      block: |
        check process glusterfsd matching glusterfsd
          start program = "/usr/sbin/gluster volume start {{ GLUSTER_VOLUME_NAME }}"
          stop program  = "echo y | /usr/sbin/gluster volume stop {{ GLUSTER_VOLUME_NAME }}"
    register: monitfilevol

  - name: Restart monit if needed
    shell:
      cmd: /etc/rc.d/rc.monit restart
    when: monitfile.changed or monitfilevol.changed

########### Mounting on all nodes
- name: Mounting glusterfs /scratchX on all nodes 
  hosts: "{{ variable_clienthost | default('clients') }}"
  gather_facts: false
  vars_files:
    - vars/main.yml
  tasks:

  - name: Creating scratch subdir
    file:
      path: '{{ GLUSTER_MOUNT_DIR }}'
      state: directory

  - name: Creating mounting info in /etc/fstab and mounting
    ansible.posix.mount:
      path: '{{ GLUSTER_MOUNT_DIR }}'
      src: "{{ groups.gluster_nodes | first }}:/{{ GLUSTER_VOLUME_NAME }}"
      fstype: glusterfs
      state: "{{item}}" #state: present will add to fstab
    loop:
      - present
      - mounted

  - name: Add monit config to monitor gluster mount 
    blockinfile:
      path: /etc/monit.d/glusterfsclient
      create: yes
      marker: "# {mark} gluster mount"
      block: |
        check filesystem {{ GLUSTER_MOUNT_DIR | replace('/','') }} path {{ GLUSTER_MOUNT_DIR }}
          start program = "/sbin/mount  {{ GLUSTER_MOUNT_DIR }}"
          stop program  = "/sbin/umount {{ GLUSTER_MOUNT_DIR }}"
    register: glustermount

  - name: Add monit config to monitor glusterfs process
    blockinfile:
      path: /etc/monit.d/glusterfsclient
      marker: "# {mark} glusterfs process"
      block: |
        check process glusterfs matching glusterfs
          start program = "/sbin/mount  {{ GLUSTER_MOUNT_DIR }}"
          stop program  = "/sbin/umount {{ GLUSTER_MOUNT_DIR }}"
    register: glusterfsproc

  - name: Restart monit if needed
    shell:
      cmd: /etc/rc.d/rc.monit restart
    when: glustermount.changed or glusterfsproc.changed
