* TODO CHeck https://github.com/marcan/takeover.sh
* TODO Modify /etc/acpi/acpi_handler.sh to remove power off when button presed
* TODO Check cron script to be ran every minute to chech connection
* TODO Monitor using ~sar~
  https://www.redhat.com/sysadmin/troubleshooting-slow-servers
* Problems
** Solving problems with xinit and xfce for all and new users
   - Make sure all users are on the video group. Maybe run
     #+BEGIN_SRC bash
     usermod -a -G audio,cdrom,floppy,plugdev,video,power,netdev,lp,scanner USERNAME
     #+END_SRC
     on each user.
   - Make sure all users have a .xinitrc (executable, readable and
     owned by the user)
     #+BEGIN_SRC 
     cp /etc/X11/xinit/xinitrc.xfce /etc/skel/.xinitrc
     chmod a+x /etc/skel/.xinitrc
     #+END_SRC
   - Make sure that the minimum gid in yp nis is 2 (see file
     =/var/yp/Makefile=)

** Dhcpcd                                                         :SLACKWARE:
   The latest slackware version advertises the nic using a new
   identity called iuad or something but the dhcp server at unal does
   not read it so I needed to edit the /etc/dhcpcd.conf file and
   activate sending the hardware address
** Advertising Ethernet speeds for eth1
  The connection from/to server through eth1 was at a maximum of
  10MB/s. while the interface supported gigabit. After many tests I
  found that by using the command
  #+begin_src shell
  ethtool -s eth1 advertise 0x010
  #+end_src
  I was able to advertise up to gigabit and then run at 100MB/s, which
  is the least acceptable given the router.

  To make this command permanent in debian, I had to add the following
  line under the config for ~eth1~ in the file
  ~/etc/network/interfaces~
  #+begin_src shell 
  post-up /sbin/ethtool -s eth1 advertise 0x010
  #+end_src
** Installation  and setup of gdb numpy
  Anaconda creates a lot of problems. It is necessary to clean the path. The command I used was:
  #+begin_src shell
  kash ". ~/.bashrc; . /home/oquendo/PATH.sh; installpkg /home/oquendo/Downloads/pip-9.0.1-x86_64-1_SBo.tgz; pip install matplotlib numpy; cd /home/oquendo/Escritorio/HerrComp/05-Debugging/gdb_numpy-1.0/; python setup.py install"
  #+end_src
  
** Armadillo problems with anaconda
  When installing armadillo, it finds the anaconda MKL and then a lot
  of problems arise when trying to run progrms with armadillo. This
  happens because putting anaconda bin on the path, in the first
  place, "overwrites" pkgconfig and many other system
  commands. Solution? eliminate anaconda from the path and then use
  alias or simething similar, like linking anaconda python, ipython,
  etc to /usr/local/bin, and no more.

** Anaconda problems with qt
  If some error like "Cannot run ... QT ... xcb plugin ... " appears,
  maybe it needs to fix permissions. Run the following command:
  #+begin_src shell
  sudo chmod 755 /opt/anaconda2/bin/qt.conf
  #+end_src
** Formating usb (recovering the usb)
   Use gdisk
   #+begin_src sh
   gdisk
   enter recovery
   c
   e
   v
   w
   q
   #+end_src
   #+begin_src sh
   parted /dev/sdb
   mklabel GPT # accept destroying everything
   #+end_src
   Also you can use =cgdisk=.

   To completely delete the fs signatures
   #+begin_src 
   wipefs --all --force /dev/sdb
   #+end_src
* PACKAGES
  - SlackBuild builder: https://alien.slackbook.org/AST/index.php
  - https://blog.spiralofhope.com/15906/slackware-package-managers.html
  - https://blog.spiralofhope.com/22995/checkinstall.html
  - slacktrack:
    https://www.reddit.com/r/slackware/comments/36flus/practices_for_package_maintenance_for_slackware/
  - src2pkg: https://distro.ibiblio.org/amigolinux/download/src2pkg/
  - https://idlemoor.github.io/slackrepo/links.html
** CDO [2019-09-18 Wed]
   Use alien AST
** GRADS [2019-09-18 Wed]
   Use alien ATS
** Octave [2019-09-18 Wed]
   slpkg -s sbo octave
** rstudio [2019-09-18 Wed]
   slpkg -s sbo R rstudio-desktop
** PyQt5 (for tortoisehg) 2018
   https://slackbuilds.org/repository/14.2/libraries/PyQt5/
   #+begin_src sh
   wget http://downloads.sourceforge.net/pyqt/PyQt5_gpl-5.7.tar.gz
   wget https://slackbuilds.org/slackbuilds/14.2/libraries/PyQt5.tar.gz
   tar xvf PyQt5.tar.gz
   cd PyQt5
   ln -s ../PyQt5_gpl-5.7.tar.gz ./
   bash PyQt5.SlackBuild.sh
   #+end_src
** mercurial 2018
   #+begin_src sh
   kash "source /root/.bashrc; conda install -y -c conda-forge mercurial"
   #+end_src
** Tortoisehg 2018
   Download the source code and use src2pkg and install the package
** kdiff3 2018
   Use slackbuilds.org

* TIPS
** For slackware packages, use slpkg 
** sbopkg behing firewall blocking rsync
   From : https://www.linuxquestions.org/questions/slackware-14/sbopkg-problem-774301/
   1. Download & install TOR from www.torproject.org
   2. Install polipo & torsocks
   3. Run "sudo torsocks sbopkg -r"
   4. Done, repository synced!
